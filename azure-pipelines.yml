# by default, pipelines are enabled for all branches
# trigger:
# - master

jobs:
- job: LibraryTests
  pool:
    vmImage: 'ubuntu-latest'
  displayName: 'Main tests'
  strategy:
    matrix:
      py36:
        python.version: '3.6'
      py37:
        python.version: '3.7'
      py38:
        python.version: '3.8'
  variables:
    PIP_CACHE_DIR: $(Pipeline.Workspace)/.pip
    CCACHE_DIR: $(Pipeline.Workspace)/ccache
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      sudo apt update && sudo apt install -y ccache
      echo "##vso[task.prependpath]/usr/lib/ccache"
    displayName: Install ccache and update PATH to use linked versions of gcc, cc, etc

  - task: Cache@2
    inputs:
      key: 'ccache | "$(Agent.OS)" | "$(python.version)"'
      path: $(CCACHE_DIR)
    displayName: Cache C compilation with ccache

  - task: Cache@2
    inputs:
      key: 'python | "$(Agent.OS)"'
      restoreKeys: |
        python | "$(Agent.OS)"
        python
      path: $(PIP_CACHE_DIR)
    displayName: Cache pip packages

  - script: |
      python -m pip install --upgrade pip wheel
    displayName: 'Install dependencies'

  - script: |
      python -m pip install .
    displayName: 'Build project'

  - script: |
      pip install pytest pytest-azurepipelines pytest-xdist
      pytest -n auto test/
    displayName: 'pytest'

- job: ExampleTests
  pool:
    vmImage: 'ubuntu-latest'
  displayName: 'Test usage examples'
  strategy:
    matrix:
      py36:
        python.version: '3.6'
      py37:
        python.version: '3.7'
      py38:
        python.version: '3.8'
  variables:
    PIP_CACHE_DIR: $(Pipeline.Workspace)/.pip
    CCACHE_DIR: $(Pipeline.Workspace)/ccache
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      sudo apt update && sudo apt install -y ccache
      echo "##vso[task.prependpath]/usr/lib/ccache"
    displayName: Install ccache and update PATH to use linked versions of gcc, cc, etc

  - task: Cache@2
    inputs:
      key: 'ccache | "$(Agent.OS)" | "$(python.version)"'
      path: $(CCACHE_DIR)
    displayName: Cache C compilation with ccache

  - task: Cache@2
    inputs:
      key: 'python | "$(Agent.OS)"'
      restoreKeys: |
        python | "$(Agent.OS)"
        python
      path: $(PIP_CACHE_DIR)
    displayName: Cache pip packages

  - script: |
      proof-of-concept/build_wheel_nodeps.sh
    displayName: 'Build pof wheel'

  - script: |
      python -m pip install proof-of-concept/dist/*.whl
    displayName: 'Install pof'

  - script: |
      python -m pip install pytest pytest-azurepipelines
    displayName: 'Install test dependencies'

  - script: |
      python -m pytest proof-of-concept/
    displayName: 'Run pof tests'

- job: CheckAutogen
  pool:
    vmImage: 'ubuntu-latest'
  displayName: 'Check autogen'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.8'
    displayName: 'Use Python 3.8'

  - script: |
      pip install pycparser==2.20
      pip install py==1.8.0
      pip install packaging==19.2
      pip install attrs==19.3.0
    displayName: 'Install dependencies'

  - script: |
      make autogen
      if [ -z "$(git status --porcelain)" ]; then
          # clean working copy
          echo "Working copy is clean, everything ok"
      else
          # Uncommitted changes
          echo "ERROR: uncommitted changes after running make autogen"
          echo "git status"
          git status
          echo
          echo "git diff"
          git diff
          exit 1
      fi
    displayName: 'make autogen'

- job: CheckPy27
  pool:
    vmImage: 'ubuntu-latest'
  displayName: 'Check Python2.7 compatibility'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7'
    displayName: 'Use Python 2.7'

  - script: |
      pip install pytest pathlib
      python test/check_py27_compat.py
    displayName: 'check_py27_compat.py'
